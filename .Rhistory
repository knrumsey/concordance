-0.2, 0.1, 1),
ncol=3, byrow=TRUE)/3
# MC Estimate
measure <- function() as.numeric(mvtnorm::rmvnorm(1, mu, Sigma))
Cmc4 <- C_mc(f, measure, nmc=5e4)
# BASS Estimate
pr <- list()
for(i in 1:3) pr[[i]] <- list(dist="normal", trunc=c(-Inf, Inf), mean=0, sd=1, weights=1)
X <- lhs::randomLHS(N, p)*4.5 - 2
y <- apply(X, 1, f)
Esig <- eigen(Sigma)
A <- Esig$vectors%*%diag(1/sqrt(Esig$values))%*%t(Esig$vectors)
X0 <- X - rep(mu, each=N)
Z <- X0%*%A
mod4 <- bass(Z, y, nmcmc=25000, nburn=20000, thin=5)
View(f)
cat('simple polynomial example test with multivariate Gaussian measure')
f <- function(x){
x[1]^2 + x[1]*x[2] + x[2]^3/9
}
# Sim Study Parameters
N <- 1000
p <- 3
# Prior
mu <- rep(0.5, 3)
Sigma <- matrix(c(1, 0.5, -0.2,
0.5, 1, 0.1,
-0.2, 0.1, 1),
ncol=3, byrow=TRUE)/3
# MC Estimate
measure <- function() as.numeric(mvtnorm::rmvnorm(1, mu, Sigma))
Cmc4 <- C_mc(f, measure, nmc=5e4)
# BASS Estimate
pr <- list()
for(i in 1:3) pr[[i]] <- list(dist="normal", trunc=c(-Inf, Inf), mean=0, sd=1, weights=1)
X <- lhs::randomLHS(N, p)*4.5 - 2
y <- apply(X, 1, f)
Esig <- eigen(Sigma)
A <- Esig$vectors%*%diag(1/sqrt(Esig$values))%*%t(Esig$vectors)
X0 <- X - rep(mu, each=N)
Z <- X0%*%A
mod4 <- bass(Z, y, nmcmc=25000, nburn=20000, thin=5)
Cba4z <- C_bass(mod4, pr)
Cba4 <- t(A)%*%Cba4z%*%A
d1 <- max(abs(Cba4-Cmc4))/max(Cba4)
document()
devtools::document()
document()
devtools::document()
f <- function(x){
x[1]^2 + x[1]*x[2] + x[2]^3/9
}
# Sim Study Parameters
N <- 1000
p <- 3
# Prior
mu <- rep(0.5, 3)
Sigma <- matrix(c(1, 0.5, -0.2,
0.5, 1, 0.1,
-0.2, 0.1, 1),
ncol=3, byrow=TRUE)/3
# MC Estimate
measure <- function() as.numeric(mvtnorm::rmvnorm(1, mu, Sigma))
Cmc4 <- C_mc(f, measure, nmc=5e4)
# BASS Estimate
pr <- list()
for(i in 1:3) pr[[i]] <- list(dist="normal", trunc=c(-Inf, Inf), mean=0, sd=1, weights=1)
X <- lhs::randomLHS(N, p)*4.5 - 2
y <- apply(X, 1, f)
Esig <- eigen(Sigma)
A <- Esig$vectors%*%diag(1/sqrt(Esig$values))%*%t(Esig$vectors)
X0 <- X - rep(mu, each=N)
Z <- X0%*%A
mod4 <- BASS::bass(Z, y, nmcmc=25000, nburn=20000, thin=5)
Cba4z <- C_bass(mod4, pr)
Cba4 <- t(A)%*%Cba4z%*%A
d1 <- max(abs(Cba4-Cmc4))/max(Cba4)
d1
Cmc4
Cba4
?C_bass
f <- function(x){
x[1]^2 + x[1]*x[2] + x[2]^3/9
}
# Sim Study Parameters
N <- 1000
p <- 3
# Prior
mu <- rep(0.5, 3)
Sigma <- matrix(c(1, 0.5, -0.2,
0.5, 1, 0.1,
-0.2, 0.1, 1),
ncol=3, byrow=TRUE)/3
# MC Estimate
measure <- function() as.numeric(mvtnorm::rmvnorm(1, mu, Sigma))
Cmc4 <- C_mc(f, measure, nmc=5e4)
# BASS Estimate
pr <- list()
for(i in 1:3) pr[[i]] <- list(dist="normal", trunc=c(-Inf, Inf), mean=0, sd=1, weights=1)
X <- lhs::randomLHS(N, p)*4.5 - 2
y <- apply(X, 1, f)
Esig <- eigen(Sigma)
A <- Esig$vectors%*%diag(1/sqrt(Esig$values))%*%t(Esig$vectors)
X0 <- X - rep(mu, each=N)
Z <- X0%*%A
mod4 <- BASS::bass(Z, y, nmcmc=25000, nburn=20000, thin=5)
Cba4z <- C_bass(mod4, pr)
Cba4 <- t(A)%*%Cba4z%*%A
d1 <- max(abs(Cba4-Cmc4))/max(Cba4)
Cmc4
Cba4
d1
library(concordance)
duqling::quack()
2^10 + 41
2^p + 4*p + 1
p = 8
2^p + 4*p + 1
duqling::dms_complicated()
duqling::dms_complicated
X <- lhs::randomLHS(1000, 2)
y = apply(X, 1, duqling::dms_complicated)
y = apply(X, 1, duqling::dms_complicated, scale01=TRUE)
range(y)
y <- (apply(X, 1, duqling::dms_additive) - 0.1)/6.4
hist(y)
hist(y, breaks=30)
N <- 10000
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 4, 2)
X <- cbind(gamma1, gamma2)
y <- (apply(X, 1, duqling::dms_additive) - 0.1)/6.4
hist(y, freq=F, breaks=30)
lines(density(y), lwd=2, col='orange')
N <- rpois(4, 100)
Z <- rbinom(4, N, phi)
phi <- y
N <- rpois(4, 100)
Z <- rbinom(4, N, phi)
Z
duqling::quack()
library(quack)
detpep_curve
duqling::detpep_curve
library(duqling)
friedman
N <- 10000
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 4, 2)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 10, 8)
X <- cbind(gamma1, gamma2, gamma3, gamma4, gamma5)
phi <- apply(X, 1, duqling::friedman, scale01=TRUE)
phi
hist(phi, breaks=30)
N <- rpois(1, 100)
C <- rpois(5, rpois(5, 100))
N
C
X <- cbind(gamma1*C[1], gamma2*C[1], gamma3*C[1], gamma4*C[1], gamma5*C[1])
phi <- apply(X, 1, duqling::friedman, scale01=TRUE)
hist(phi, breaks=30)
XX <- randomLHS(10000, 5)
XX <- lhs::randomLHS(10000, 5)
yy <- apply(XX, 1, friedman, scale01=TRUE)
range(yy)
N <- 10000
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 4, 2)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 10, 8)
N <- rpois(1, 100)
C <- rpois(5, rpois(5, 100))
X <- cbind(gamma1*C[1], gamma2*C[2], gamma3*C[3], gamma4*C[4], gamma5*C[5])
phi <- (apply(X, 1, duqling::friedman, scale01=TRUE) - 0.8)/(30-0.8)
hist(phi, breaks=30)
C <- runif(5)
C <- runif(5)
X <- cbind(gamma1^C[1], gamma2^C[2], gamma3^C[3], gamma4^C[4], gamma5^C[5])
phi <- (apply(X, 1, duqling::friedman, scale01=TRUE) - 0.8)/(30-0.8)
hist(phi, breaks=30)
mod <- bass(X, phi)
mod <- BASS::bass(X, phi)
sobol(mod)
BASS::sobol(mod)
sob = BASS::sobol(mod)
plot(sob)
N <- 10000
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 6, 3)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 1, 8)
N <- rpois(1, 100)
C <- runif(5)
X <- cbind(gamma1^C[1], gamma2^C[2], gamma3^C[3], gamma4^C[4], gamma5^C[5])
phi <- (apply(X, 1, duqling::friedman, scale01=TRUE) - 0.8)/(30-0.8)
hist(phi, breaks=30)
Z <- rbinom(N, phi)
dms_complicated()
dms_complicated
fff <- function(x) 1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + x[3]*sqrt(x[4])*sin(2*pi*x[5])^2
XX
range(apply(XX, 1, fff))
fff <- function(x) ((1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + x[3]*sqrt(x[4])*sin(2*pi*x[5])^2) - 0.05)/(7.2-0.05)
range(apply(XX, 1, fff))
N <- 10000
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 6, 3)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 1, 8)
fff <- function(x) ((1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + x[3]*sqrt(x[4])*sin(2*pi*x[5])^2) - 0.05)/(7.2-0.05)
N <- rpois(1, 100)
C <- runif(5)
X <- cbind(gamma1^C[1], gamma2^C[2], gamma3^C[3], gamma4^C[4], gamma5^C[5])
phi <- apply(X, 1, fff)
hist(phi, breaks=30)
Z <- rbinom(N, phi)
lines(density(phi), lwd=2, col='orange')
hist(phi, breaks=30, freq=F)
lines(density(phi), lwd=2, col='orange')
fff <- function(x) ((1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + 0.5*x[3]*sqrt(x[4])*sin(2*pi*x[5])^2)) - 0)/(1-0)
fff <- function(x) ((1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + 0.5*(x[3]*sqrt(x[4])*sin(2*pi*x[5])^2))) - 0)/(1-0)
fff <- function(x) ((1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + 0.5*(x[3]*sqrt(x[4])*sin(2*pi*x[5])^2)) - 0)/(1-0)
range(apply(X, 1, fff))
range(apply(XX, 1, fff))
fff <- function(x) ((1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + 0.5*(x[3]*sqrt(x[4])*sin(2*pi*x[5])^2)) - 0.04)/(6.8-0.04)
range(apply(XX, 1, fff))
N <- 10000
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 6, 3)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 1, 8)
fff <- function(x) ((1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + 0.5*(x[3]*sqrt(x[4])*sin(2*pi*x[5])^2)) - 0.04)/(6.8-0.04)
N <- rpois(1, 100)
C <- runif(5)
X <- cbind(gamma1^C[1], gamma2^C[2], gamma3^C[3], gamma4^C[4], gamma5^C[5])
phi <- apply(X, 1, fff)
hist(phi, breaks=30, freq=F)
lines(density(phi), lwd=2, col='orange')
Z <- rbinom(1. N, phi)
duqling
library(duqling)
?duqling
?run_sim_study
1.35/7
1.9/7
fff <- function(x) (1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + 0.5*(x[3]*sqrt(x[4])*sin(2*pi*x[5])^2))/7
range(apply(XX, 1, fff))
fff <- function(x) (2*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + 0.5*(x[3]*sqrt(x[4])*sin(2*pi*x[5])^2))/7
range(apply(XX, 1, fff))
1.9/7
# Make data table
# DATA FROM THE PAPER
phi <- c(3.5, 0, 4.3, 1.4, 6.3, 8.5, 6.2, 5.3, 0.7, 0.5, 6.0, 10.8, 20.2)/100
# Make data table
# DATA FROM THE PAPER
phi <- c(3.5, 0, 4.3, 1.4, 6.3, 8.5, 6.2, 5.3, 0.7, 0.5, 6.0, 10.8, 20.2)/100
lam <- c(17.5, 18.6, 38.2, 11.2, 59.3, 85.7, 43.6, 61.5, 50.5, 17.6, 128.4, 231.5, 175.4)
length(phi)
length(lam)
plot(log(lam), phi)
hist(phi)
range(phi)
t1 <- rexp(N, d1 + d12/d2)
d1 <- 1
d2 <- 2
d12 <- 3
cnt <- 0
N <- 10000
t1 <- rexp(N, d1 + d12/d2)
t2 <- rexp(N, d2 + d12/d1)
d1 <- 1
d2 <- 2
d12 <- 3
cnt <- 0
N <- 10000
t1 <- rexp(N, d1 + d12/d2)
t2 <- rexp(N, d2 + d12/d1)
for(i in 2:N){
t1[i] <- rexp(1, d1 + d12*t2[i-1])
t2[i] <- rexp(1, d1 + d12*t1[i])
}
range(t1)
range(t2)
plot(t1, t2)
fit <- lm(I(log(lam)) ~ phi)
fit$coefficients
fit$qr
fit
fit
fit <- lm(I(log(lam)) ~ phi)
fit$coefficients
alpha <- lm(I(log(lam)) ~ phi)$coefficients
alpha
d1 <- 1/alpha[1]
d2 <- 1/alpha[2]
d12 <- 0.1
cnt <- 0
N <- 10000
t1 <- rexp(N, d1 + d12/d2)
t2 <- rexp(N, d2 + d12/d1)
for(i in 2:N){
t1[i] <- rexp(1, d1 + d12*t2[i-1])
t2[i] <- rexp(1, d1 + d12*t1[i])
}
cor(t1, t2)
plot(log(lam), phi)
abline(fit)
plot(lam, phi)
N <- c(911, 634, 570, 3260, 802, 1490, 830, 711, 518, 755, 678, 1601, 812)
length(N)
T <- rpois(J, round(rnorm(J, 5000, 500)))
# Make data table
J <- 13
N <- c(911, 634, 570, 3260, 802, 1490, 830, 711, 518, 755, 678, 1601, 812)
T <- rpois(J, round(rnorm(J, 5000, 500)))
T
Y <- rpois(J, lam*T)
Y
T <- rpois(J, round(rnorm(J, 1000, 50)))
Y <- rpois(J, lam*T)
Z <- rbinom(J, N, phi)
Z
phi <- apply(X, 1, fff)
phi
mean(phi)
hist(phi, breaks=30)
mean(phi)
phi
# DATA FROM THE PAPER
phi <- c(3.5, 0, 4.3, 1.4, 6.3, 8.5, 6.2, 5.3, 0.7, 0.5, 6.0, 10.8, 20.2)/100
y <- apply(X, 1, fff)
phi
mean(phi)
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 6, 3)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
qe4
1e4 == 1000
1e4 == 10000
# Make up C numbers
cfunc <- function(C, jj=1, N=5e2){
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 6, 3)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 1, 8)
X <- cbind(gamma1^C[1], gamma2^C[2], gamma3^C[3], gamma4^C[4], gamma5^C[5])
y <- apply(X, 1, fff)
(mean(y) - phi[jj])^2
}
C <- exp(C)/(1+exp(-C))
# Make up C numbers
cfunc <- function(C, jj=1, N=5e2){
C <- exp(C)/(1+exp(-C))
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 6, 3)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 1, 8)
X <- cbind(gamma1^C[1], gamma2^C[2], gamma3^C[3], gamma4^C[4], gamma5^C[5])
y <- apply(X, 1, fff)
(mean(y) - phi[jj])^2
}
C = 1
exp(C)/(1+exp(-C))
C <- 1/(1+exp(-C))
1/(1+exp(-C))
1 + exp(-1)
1 + exp(0)
# Make up C numbers
cfunc <- function(C, jj=1, N=5e2){
C <- 1/(1+exp(-C))
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 6, 3)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 1, 8)
X <- cbind(gamma1^C[1], gamma2^C[2], gamma3^C[3], gamma4^C[4], gamma5^C[5])
y <- apply(X, 1, fff)
(mean(y) - phi[jj])^2
}
op <- opt(cfunc, rep(0, 5))
op <- optim(cfunc, rep(0, 5))
?optim
op <- optim(cfunc, rep(0, 5), method="L-BFGS-B", lower=-10, upper=10)
op <- optim(rep(0, 5), cfunc, method="L-BFGS-B", lower=-10, upper=10)
op <- optim(rep(0, 5), cfunc)
op
op$par
C <- matrix(NA, nrow=5, ncol=J)
C <- matrix(NA, nrow=5, ncol=J)
for(j in 1:J){
op <- optim(rep(0, 5), cfunc)
C[,j] <- 1/(1+exp(-op$par))
}
C
C <- matrix(NA, nrow=5, ncol=J)
for(j in 1:J){
op <- optim(rep(0, 5), cfunc, method="L-BFGS-B", lower=-10, upper=10)
C[,j] <- 1/(1+exp(-op$par))
}
C
C <- matrix(NA, nrow=5, ncol=J)
for(j in 1:J){
op <- optim(rep(0, 5), cfunc, method="L-BFGS-B", lower=-3, upper=3)
C[,j] <- 1/(1+exp(-op$par))
}
round(1/C,2)
C <- matrix(NA, nrow=5, ncol=J)
for(j in 1:J){
op <- optim(rep(0, 5), cfunc)
C[,j] <- 1/(1+exp(-op$par))
}
TAB <- rbind(Y, Z, N, T)
TAB
TAB <- rbind(Y, Z, N, T, C, c(3,6,7,2,1), c(1,3,1,2,8))
TAB <- rbind(Y, Z, N, T, C)
TAB
TAB <- rbind(Y, Z, N, T, round(1/C, 2))
TAB
set.seed(1213212321)
N <- 10000
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 6, 3)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 1, 8)
# bounded between 0 and 0.25
fff <- function(x) (1.9*(1.35 + exp(x[1])*sin(13*(x[1]-0.6)^2)*exp(-x[2])*sin(7*x[2])) + 0.5*(x[3]*sqrt(x[4])*sin(2*pi*x[5])^2))/7/4
N <- rpois(1, 100)
C <- runif(5)
X <- cbind(gamma1^C[1], gamma2^C[2], gamma3^C[3], gamma4^C[4], gamma5^C[5])
phi <- apply(X, 1, fff)
hist(phi, breaks=30, freq=F)
lines(density(phi), lwd=2, col='orange')
Z <- rbinom(1, N, phi)
# DATA FROM THE PAPER
phi <- c(3.5, 0, 4.3, 1.4, 6.3, 8.5, 6.2, 5.3, 0.7, 0.5, 6.0, 10.8, 20.2)/100
lam <- c(17.5, 18.6, 38.2, 11.2, 59.3, 85.7, 43.6, 61.5, 50.5, 17.6, 128.4, 231.5, 175.4)
alpha <- lm(I(log(lam)) ~ phi)$coefficients
# Simulate data from joint alpha prior (idk why)
d1 <- 1/alpha[1]
d2 <- 1/alpha[2]
d12 <- 0.1
cnt <- 0
N <- 10000
t1 <- rexp(N, d1 + d12/d2)
t2 <- rexp(N, d2 + d12/d1)
for(i in 2:N){
t1[i] <- rexp(1, d1 + d12*t2[i-1])
t2[i] <- rexp(1, d1 + d12*t1[i])
}
# Make data table
J <- 13
N <- c(911, 634, 570, 3260, 802, 1490, 830, 711, 518, 755, 678, 1601, 812)
T <- rpois(J, round(rnorm(J, 1000, 50)))
Y <- rpois(J, lam*T)
Z <- rbinom(J, N, phi)
# Make up C numbers
cfunc <- function(C, jj=1, N=5e2){
C <- 1/(1+exp(-C))
gamma1 <- rbeta(N, 3, 1)
gamma2 <- rbeta(N, 6, 3)
gamma3 <- rbeta(N, 7, 1)
gamma4 <- rbeta(N, 2, 2)
gamma5 <- rbeta(N, 1, 8)
X <- cbind(gamma1^C[1], gamma2^C[2], gamma3^C[3], gamma4^C[4], gamma5^C[5])
y <- apply(X, 1, fff)
(mean(y) - phi[jj])^2
}
C <- matrix(NA, nrow=5, ncol=J)
for(j in 1:J){
op <- optim(rep(0, 5), cfunc)
C[,j] <- 1/(1+exp(-op$par))
}
TAB <- rbind(Y, Z, N, T, round(1/C, 2))
rownames(TAB) <- c("Y", "Z", "N", "T", "C1", "C2", "C3", "C4", "C5")
stargazer::stargazer(tab)
stargazer::stargazer(TAB)
d1
d2
d12
1/d1
1/d2
d2
1/12
d1
4/12
9/12
3/12
2/12
1/12
2/12
d1
12*(1:6)
12/36      3d2/12.        4/
d2
d1
36/12
36/3
364
36/4
1633 - 93
- 59
1633 - 93 -59 - 43
