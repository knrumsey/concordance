m = function(tt) 1
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 10
mu <- 0.5
sig <- 1/6
pow <- 1
s = function(tt) 0.1 + a*dnorm(tt, mu, sig)^pow
sp = function(tt) dnorm_pow_prime(tt, mu, sig, pow, a)
m = function(tt) 1
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 10
mu <- 0.5
sig <- 1/6
pow <- 3
s = function(tt) 0.1 + a*dnorm(tt, mu, sig)^pow
sp = function(tt) dnorm_pow_prime(tt, mu, sig, pow, a)
m = function(tt) 1
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
s = function(tt)  a*dnorm(tt, mu, sig)^pow
sp = function(tt) dnorm_pow_prime(tt, mu, sig, pow, a)
m = function(tt) 1
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
s = function(tt) 0.1 + tt^a*(1-tt)^a
sp = function(tt) a*tt^(a-1)*(1-tt)^(a-1)*(1-2tt)
sp = function(tt) a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 50
a <- 50
s = function(tt) 0.1 + tt^a*(1-tt)^a
sp = function(tt) a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 500
s = function(tt) 0.1 + tt^a*(1-tt)^a
sp = function(tt) a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 500
s = function(tt) 0.1 + tt^a*(1-tt)^a
sp = function(tt) a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 500
s = function(tt) 0.1 + tt^a*(1-tt)^a
sp = function(tt) a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 5
s = function(tt) 0.1 + tt^a*(1-tt)^a
sp = function(tt) a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 5
s = function(tt) 0.1 + tt^a*(1-tt)^a
sp = function(tt) a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
curve(s(x))
a = 1000
curve(s(x))
a = 50
curve(s(x))
gamma(2*a)
gamma(a)^2
gamma(2*a)/gamma(a)^2
a <- 5
s = function(tt) 0.1 + gamma(2*a)/gamma(a)^2*(tt)^a*(1-tt)^a
sp = function(tt) gamma(2*a)/gamma(a)^2*a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 5
s = function(tt) 0.1 + gamma(2*a)/gamma(a)^2*(tt)^a*(1-tt)^a
sp = function(tt) gamma(2*a)/gamma(a)^2*a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 20
s = function(tt) 0.1 + gamma(2*a)/gamma(a)^2*(tt)^a*(1-tt)^a
sp = function(tt) gamma(2*a)/gamma(a)^2*a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 40
s = function(tt) 0.1 + gamma(2*a)/gamma(a)^2*(tt)^a*(1-tt)^a
sp = function(tt) gamma(2*a)/gamma(a)^2*a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 30
s = function(tt) 0.1 + gamma(2*a)/gamma(a)^2*(tt)^a*(1-tt)^a
sp = function(tt) gamma(2*a)/gamma(a)^2*a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 30
s = function(tt)  gamma(2*a)/gamma(a)^2*(tt)^a*(1-tt)^a
sp = function(tt) gamma(2*a)/gamma(a)^2*a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 50
s = function(tt)  gamma(2*a)/gamma(a)^2*(tt)^a*(1-tt)^a
sp = function(tt) gamma(2*a)/gamma(a)^2*a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a <- 50
s = function(tt) 0.1 +  gamma(2*a)/gamma(a)^2*(tt)^a*(1-tt)^a
sp = function(tt) gamma(2*a)/gamma(a)^2*a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
tt
as.numeric(tt < 1 ) * as.numeric(tt > 0)
a = 50
eps = 0.05
s = function(tt) 0.1 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 50
eps = 0.05
s = function(tt) 0.1 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 500
eps = 0.05
s = function(tt) 0.1 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
a = 500
eps = 0.05
s = function(tt) 0.1 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
a = 50
eps = 0.055
s = function(tt) 0.1 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 50
eps = 0.055
s = function(tt) 0 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 50
eps = 0.02
s = function(tt) 0 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 50
eps = 0.02
s = function(tt) 0 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 50
eps = 0.02
s = function(tt) 0 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 50
eps = 0.02
s = function(tt) 0 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 50
eps = 0.05
s = function(tt) 0 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 500
eps = 0.05
s = function(tt) 0 + a * as.numeric(tt < 1 ) * as.numeric(tt > 0)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
a <- 50
s = function(tt) 0.1 +  gamma(2*a)/gamma(a)^2*(tt)^a*(1-tt)^a
sp = function(tt) gamma(2*a)/gamma(a)^2*a*tt^(a-1)*(1-tt)^(a-1)*(1-2*tt)
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 500
eps = 0.05
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 500
eps = 0.05
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 5000
eps = 0.05
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 5000
eps = 0.1
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 5000
eps = 0.2
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 5000
eps = 0.1
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 5000
eps = 0.08
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 5000
eps = 0.11
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 5000
eps = 0.15
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
abline(h=conc_jit_poly, col="firebrick", lty=4, lwd=1)
abline(h=conc_agg_poly(s, sp, m), col="orange", lty=4, lwd=1)
abline(h=conc_aug_poly(s, sp, m), col="dodgerblue", lty=4, lwd=1)
a = 5000
eps = 0.15
s = function(tt) 0 + a * as.numeric(tt < 0.5 + eps ) * as.numeric(tt > 0.5 - eps)
sp = function(tt) 0
curve(conc_func_poly(x), ylim=c(-0.25, 1), xlab="t", ylab="concordance(t)", main="Analytic Results")
library(BASS)
library(lhs)
f1 <- function(x, tt){
res <- rep(x[1]^2 + x[1]*x[2], length(tt))
}
f2 <- function(x, tt, a=-10, b=10){
x[1]^2 + x[1]*x[2] + (tt*(b-a) + a)*x[2]^3
}
grlee1 <- function(x, scale01=FALSE){
if(scale01){
x <- 0.5 + 2*x
}
term1 <- sin(10*pi*x) / (2*x)
term2 <- (x-1)^4
y <- term1 + term2
return(y)
}
f3 <- function(x, tt, a, b, phi){
#f1(x, tt)*(1+plogis(tt, 0.5, 0.05))
f2(x, tt, a ,b)*phi(tt)
}
phi1 <- function(tt) 1
phi2 <- function(tt) dnorm(tt, 0.5, 1/8)^2 + 0.1
n <- 300
p <- 2
X <- lhs::maximinLHS(n, p)
nfunc <- 20
tt <- seq(0, 1, length.out=nfunc)
y1 <- apply(X, 1, f1, tt=tt) + rnorm(n, 0, 0.001)
y2 <- apply(X, 1, f3, tt=tt, a=-10, b=10, phi1) + rnorm(n, 0, 0.001)
# Augmentation
fit1 <- bass(X, y1, xx.func=tt)
fit2 <- bass(X, y2, xx.func=tt)
conc_method1 <- conc_bass(fit1, fit2)
library(concordance)
library(BASS
)
BASS:::bassPCAsetup
devtools::document()
library(concordance)
?concordance::C_bassPCA_v2()
library(BASS)
library(lhs)
f1 <- function(x, tt){
res <- rep(x[1]^2 + x[1]*x[2], length(tt))
}
f2 <- function(x, tt, a=-10, b=10){
x[1]^2 + x[1]*x[2] + (tt*(b-a) + a)*x[2]^3
}
grlee1 <- function(x, scale01=FALSE){
if(scale01){
x <- 0.5 + 2*x
}
term1 <- sin(10*pi*x) / (2*x)
term2 <- (x-1)^4
y <- term1 + term2
return(y)
}
f3 <- function(x, tt, a, b, phi){
#f1(x, tt)*(1+plogis(tt, 0.5, 0.05))
f2(x, tt, a ,b)*phi(tt)
}
phi1 <- function(tt) 1
phi2 <- function(tt) dnorm(tt, 0.5, 1/8)^2 + 0.1
n <- 300
p <- 2
X <- lhs::maximinLHS(n, p)
nfunc <- 20
tt <- seq(0, 1, length.out=nfunc)
y1 <- apply(X, 1, f1, tt=tt) + rnorm(n, 0, 0.001)
y2 <- apply(X, 1, f3, tt=tt, a=-10, b=10, phi1) + rnorm(n, 0, 0.001)
dim(y1)
?conc_bass
devtools::document()
xx <- lhs::maximinLHS(30, 2)
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
xx <- lhs::maximinLHS(30, 2)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
xx <- lhs::maximinLHS(30, 2)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
library(sp)
install.packages('sp')
library(sp)
p <- 10
xx <- lhs::maximinLHS(30, p)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
apply(yy, 2, function(col) sum(col^2))
dim(y)
dim(yy)
chisq <- apply(yy, 1, function(row) sum(row^2))
chisq
pchisq(chisq, 10)
pval <- pchisq(chisq, 10)
hist(pval)
p <- 10
n <- 300
xx <- lhs::maximinLHS(n, p)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
chisq <- apply(yy, 1, function(row) sum(row^2))
pval <- pchisq(chisq, 10)
hist(pval)
library(sp)
hist(pval, breaks=seq(-0.1, 1, by=0.1))
hist(pval, breaks=seq(-0.1, 1, by=1.1+rnorm(1, 0, 0.02)))
hist(pval, breaks=seq(-0.1, 1, by=1.1+rnorm(1, 0, 0.02)))
hist(pval, breaks=seq(-0.1, 1.1, by=1.1+rnorm(1, 0, 0.02)))
hist(pval, breaks=seq(-0.1, 1.1, by=1.1+rnorm(1, 0, 0.02)))
hist(pval, breaks=seq(-0.1, 1.1, by=0.1+rnorm(1, 0, 0.02)))
p <- 10
n <- 300
xx <- lhs::maximinLHS(n, p)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
chisq <- apply(yy, 1, function(row) sum(row^2))
pval <- pchisq(chisq, 10)
hist(pval, breaks=seq(-0.1, 1.1, by=0.1+rnorm(1, 0, 0.02)))
library(sp)
p <- 10
n <- 300
xx <- lhs::maximinLHS(n, p)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
chisq <- apply(yy, 1, function(row) sum(row^2))
pval <- pchisq(chisq, 10)
hist(pval, breaks=seq(-0.1, 1.1, by=0.1+rnorm(1, 0, 0.02)))
library(sp)
p <- 10
n <- 300
xx <- lhs::maximinLHS(n, p)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
chisq <- apply(yy, 1, function(row) sum(row^2))
pval <- pchisq(chisq, 10)
hist(pval, breaks=seq(-0.1, 1.1, by=0.1+rnorm(1, 0, 0.02)))
library(sp)
p <- 10
n <- 300
xx <- lhs::maximinLHS(n, p)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
chisq <- apply(yy, 1, function(row) sum(row^2))
pval <- pchisq(chisq, 10)
hist(pval, breaks=seq(-0.1, 1.1, by=0.1+rnorm(1, 0, 0.02)))
library(sp)
p <- 10
n <- 3000
xx <- lhs::maximinLHS(n, p)
p <- 10
n <- 1000
xx <- lhs::maximinLHS(n, p)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
chisq <- apply(yy, 1, function(row) sum(row^2))
pval <- pchisq(chisq, 10)
hist(pval, breaks=seq(-0.1, 1.1, by=0.1+rnorm(1, 0, 0.02)))
library(sp)
p <- 30
n <- 1000
xx <- lhs::maximinLHS(n, p)
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
chisq <- apply(yy, 1, function(row) sum(row^2))
pval <- pchisq(chisq, 10)
hist(pval, breaks=seq(-0.1, 1.1, by=0.1+rnorm(1, 0, 0.02)))
library(sp)
xx <- lhs::maximinLHS(n, p)*0.995 + 0.005
range(xx)
n <- 500
xx <- lhs::maximinLHS(n, p)*0.995 + 0.005
range(xx)
xx <- lhs::maximinLHS(n, p)*0.995 + 0.0025
range(xx)
xx <- lhs::maximinLHS(n, p)*0.995 + 0.0025
plot(xx[,1], xx[,2])
yy <- qnorm(xx)
plot(yy[,1], yy[,2])
