% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cfg_Matrix.R
\name{Cfg_mc}
\alias{Cfg_mc}
\title{C_fg matrix with Monte Carlo}
\usage{
Cfg_mc(
  f,
  g,
  measure,
  grad = FALSE,
  nmc = 10000,
  names = NULL,
  seed = NULL,
  return_C = FALSE,
  ...
)
}
\arguments{
\item{f}{the function f (or gradient of f, if grad=TRUE)}

\item{g}{the function g (or gradient of f, if grad=TRUE)}

\item{measure}{the number of inputs in f. See details for more sophisticated use (for non-uniform measure)}

\item{grad}{if TRUE f is assumed to return the gradient of f. When FALSE, forward diff is used for gradient approximation.}

\item{nmc}{the number of Monte Carlo replications}

\item{names}{(optional) names for the functions f and g}

\item{seed}{optional. seed for MC draws}

\item{return_C}{(default FALSE). When TRUE, the object returned is a list with components Cf Cg Cfg}

\item{...}{additional arguments passed to f()}
}
\value{
the approximated C matrix
}
\description{
Approximates generalized C matrix with Monte Carlo for functions f and g
}
\details{
\code{measure} should be an argument-free function which simulates a draw x ~ p(x) where p is the prior measure. Alternatively, \code{measure} can be a numeric scalar, in which case the Monte Carlo draws are simulated from the standard uniform distribution as \code{runif(measure[1])}.
}
